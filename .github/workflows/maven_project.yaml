name: increment maven project pipelien

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

    # Removed because being handled in multistage dockerfile
    #  - name: Set up JDK 11
    #    uses: actions/setup-java@v3
    #    with:
    #      java-version: '11'
    #      distribution: 'temurin' 
      
      - name: Increment version
        run: |
          chmod +x ./scripts/increment_version.sh  
          ./scripts/increment_version.sh  
        id: increment_version

      - name: Verify new_version output
        run: echo "New version is $new_version"
        env:
            new_version: ${{ env.new_version }}

      - name: Commit and push version change
        working-directory: ./myapp 
        run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global alias.add-commit '!git add -A && git commit'
            git add-commmit -m "Update version in pom.xml" 
            git push origin master
          #git add pom.xml
          # git commit -m "Update version in pom.xml"
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Removed because being handled in multistage dockerfile     
    #  - name: Compile the code with Maven
    #    working-directory: ./myapp 
    #    run: mvn clean install
    
    # Removed because being handled in multistage dockerfile
    #  - name: Package the JAR file
    #    working-directory: ./myapp 
    #    run: mvn package

    # Removed because being handled in multistage dockerfile
    #  - name: Upload JAR artifact
    #    uses: actions/upload-artifact@v3
    #    with:
    #      name: maven-my-app-artifact
    #      path: myapp/target/*.jar  

      - name: Build Docker image
        run: |
          echo "${{ secrets.APPUSER_PASSWORD }}" > password-file
          DOCKER_IMAGE="maven-my-app:${{ env.new_version }}"
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV
          docker build --secret id=APPUSER_PASSWORD,src=password-file -t $DOCKER_IMAGE .
        env:
          APPUSER_PASSWORD: ${{ secrets.APPUSER_PASSWORD }}
      
      - name: Remove passowrd file
        run: rm password-file

    #   - name: Debug Docker image tag
    #     run: |
    #       echo "DOCKER_IMAGE=$DOCKER_IMAGE"
    #       echo "Target tag: ${{ secrets.DOCKER_USERNAME }}/maven-my-app:${{ env.new_version }}"

      - name: Tag Docker image
        run: |
          docker tag $DOCKER_IMAGE ${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  
          password: ${{ secrets.DOCKER_TOKEN }}    


      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE


      - name: Run Docker image
        run: |
          docker run -d --name my-app-container ${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE

    
        